class Solution {
    public boolean isValidBST(TreeNode root) {
        // we are considering null as our max & min contraints.
        return validate(root, null, null);
    }

    public boolean validate(TreeNode root, Integer max, Integer min){
        if(root == null){
            return true;
        } else if(max != null && root.val >= max || min != null && root.val <= min){
            return false;
        } else {
            // Here in left we are making sure our max is root.val.
            // in right we are making sure our min is root.val.
            return validate(root.left, root.val, min) && validate(root.right, max, root.val);
        }
    }
}