class Solution {
    public int coinChange(int[] coins, int amount) {
    Arrays.sort(coins);
    //zero based that's why we are adding 1.
    int[] dp = new int[amount + 1];
    Arrays.fill(dp, amount + 1);
    dp[0] = 0;
    for(int i = 0; i <= amount; i++){
        // iterate through every coin
        for(int j = 0; j<coins.length; j++){
            if(coins[j] <= i){
// check the amount left after taking subtracting the current coin value once.
                dp[i] = Math.min(dp[i], 1 + dp[i - coins[j]]);
// else condition is preventing us from checking if the coin is bigger than amount.
            } else {
                break;
            }
        }
    }
    // if dp[amount] is greater than the amount return -1 else return dp[amount].
    return dp[amount] > amount ? -1 : dp[amount];
    }
}